"""add_company_and_mention_models

Revision ID: 4a64a256109e
Revises: 6eae0cbc8923
Create Date: 2025-08-08 18:28:30.652101

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "4a64a256109e"
down_revision = "6eae0cbc8923"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "company",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
        sa.Column(
            "username", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "description", sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True
        ),
        sa.Column("industry", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("company_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("website", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("headquarters", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("locations", sa.JSON(), nullable=True),
        sa.Column("founded_year", sa.Integer(), nullable=True),
        sa.Column(
            "employee_count_range", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("linkedin_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("twitter_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("facebook_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("instagram_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("logo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("cover_image_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "visibility",
            sa.String(),
            nullable=False,
        ),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("follower_count", sa.Integer(), nullable=False),
        sa.Column("post_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_company_industry"), "company", ["industry"], unique=False)
    op.create_index(op.f("ix_company_name"), "company", ["name"], unique=False)
    op.create_index(op.f("ix_company_username"), "company", ["username"], unique=True)
    op.create_table(
        "companyadmin",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("company_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "companyfollower",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("company_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("followed_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "postmention",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("post_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "mentioned_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "mentioned_by_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("mention_text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("position_start", sa.Integer(), nullable=False),
        sa.Column("position_end", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["mentioned_by_user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mentioned_user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["post.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("postmention")
    op.drop_table("companyfollower")
    op.drop_table("companyadmin")
    op.drop_index(op.f("ix_company_username"), table_name="company")
    op.drop_index(op.f("ix_company_name"), table_name="company")
    op.drop_index(op.f("ix_company_industry"), table_name="company")
    op.drop_table("company")
    # ### end Alembic commands ###
